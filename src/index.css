@import "tailwindcss";

/* Define custom tetris colors using @theme */
@theme {
  --color-tetris-cyan: rgb(34 211 238);
  --color-tetris-yellow: rgb(250 204 21);
  --color-tetris-purple: rgb(168 85 247);
  --color-tetris-green: rgb(34 197 94);
  --color-tetris-red: rgb(239 68 68);
  --color-tetris-blue: rgb(59 130 246);
  --color-tetris-orange: rgb(249 115 22);
}

/* Safelist dynamic tetris classes using @source inline() */
@source inline("bg-tetris-{cyan,yellow,purple,green,red,blue,orange}");
@source inline("text-tetris-{cyan,yellow,purple,green,red,blue,orange}");
@source inline("border-tetris-{cyan,yellow,purple,green,red,blue,orange}");

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;
    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;
    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;
    --secondary: 210 40% 96%;
    --secondary-foreground: 222.2 84% 4.9%;
    --muted: 210 40% 96%;
    --muted-foreground: 215.4 16.3% 46.9%;
    --accent: 210 40% 96%;
    --accent-foreground: 222.2 84% 4.9%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;
    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;
    --radius: 0.5rem;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
  }
}

@layer base {
  * {
    border-color: hsl(var(--border));
  }
  body {
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
  }
}

/* Allow vertical scrolling on small screens */
html,
body {
  height: 100%;
  margin: 0;
  padding: 0;
  overflow-x: hidden;
  overflow-y: auto;
}

#root {
  min-height: 100vh;
}

/* Custom scrollbar for sidebar */
@media (min-width: 768px) {
  aside::-webkit-scrollbar {
    width: 6px;
  }

  aside::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0.2);
    border-radius: 3px;
  }

  aside::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, 0.2);
    border-radius: 3px;
  }

  aside::-webkit-scrollbar-thumb:hover {
    background: rgba(255, 255, 255, 0.3);
  }
}

/* Layout System - CSS Grid Implementation */
.desktop-layout {
  display: grid;
  gap: 1.5rem;
  max-width: 1200px;
  margin: 0 auto;
  min-height: calc(100vh - 2rem);
}

/* Compact Mode Override */
.desktop-layout.compact-mode {
  gap: 0.75rem;
}

/* Grid Transition Animations */
.desktop-layout.transition-grid {
  transition:
    grid-template-columns 300ms ease-in-out,
    gap 300ms ease-in-out;
}

/* Layout Areas */
.layout-sidebar {
  grid-area: sidebar;
  display: flex;
  flex-direction: column;
  max-height: calc(100vh - 2rem);
  overflow-y: auto;
  scrollbar-width: thin;
  scrollbar-color: rgba(255, 255, 255, 0.2) transparent;
}

.layout-main {
  grid-area: main;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: calc(100vh - 2rem);
}

.layout-ai {
  grid-area: ai;
  display: flex;
  flex-direction: column;
  max-height: calc(100vh - 2rem);
  overflow-y: auto;
}

/* Responsive Breakpoints */
@media (max-width: 768px) {
  .desktop-layout {
    grid-template-columns: 1fr !important;
    grid-template-rows: auto 1fr auto;
    grid-template-areas:
      "header"
      "main"
      "footer";
    gap: 0.5rem;
    padding: 0.5rem;
  }

  .layout-sidebar,
  .layout-ai {
    display: none; /* Hidden on mobile, functionality moved to header/footer */
  }
}

/* Accessibility Styles */
.skip-links {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1000;
}

.skip-link {
  position: absolute;
  top: -40px;
  left: 6px;
  padding: 8px 12px;
  background: var(--background);
  color: var(--foreground);
  text-decoration: none;
  border: 2px solid var(--color-tetris-cyan);
  border-radius: 4px;
  font-weight: 600;
  font-size: 14px;
  transition: top 0.3s ease;
  white-space: nowrap;
}

.skip-link:focus {
  top: 6px;
}

.sr-only-focusable:not(:focus-within) {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

/* Enhanced Focus Indicators */
.focus-visible,
button:focus-visible,
a:focus-visible,
[tabindex]:focus-visible,
input:focus-visible,
select:focus-visible,
textarea:focus-visible {
  outline: 3px solid var(--color-tetris-cyan);
  outline-offset: 2px;
  border-radius: 4px;
}

/* Remove default focus outline for mouse users */
button:focus:not(:focus-visible),
a:focus:not(:focus-visible),
[tabindex]:focus:not(:focus-visible) {
  outline: none;
}

/* High Contrast Focus Indicators */
@media (prefers-contrast: high) {
  .focus-visible,
  button:focus-visible,
  a:focus-visible,
  [tabindex]:focus-visible {
    outline: 4px solid;
    outline-color: Highlight;
  }
}

@media (max-width: 375px) {
  .desktop-layout {
    padding: 0.25rem;
    gap: 0.25rem;
  }
}

/* High Contrast Mode Support */
@media (prefers-contrast: high) {
  .layout-sidebar {
    border-right: 2px solid var(--color-semantic-primary, #00f5ff);
  }
}

/* Reduced Motion Support */
@media (prefers-reduced-motion: reduce) {
  .desktop-layout.transition-grid {
    transition: none;
  }
}
